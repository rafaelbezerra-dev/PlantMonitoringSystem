// Generated by CoffeeScript 1.10.0
angular.module('starter.controllers', []).controller('AppCtrl', function($scope, $ionicModal, $timeout) {
  $scope.loginData = {};
  $ionicModal.fromTemplateUrl('templates/login.html', {
    scope: $scope
  }).then(function(modal) {
    $scope.modal = modal;
  });
  $scope.closeLogin = function() {
    $scope.modal.hide();
  };
  $scope.login = function() {
    $scope.modal.show();
  };
  $scope.doLogin = function() {
    console.log('Doing login', $scope.loginData);
    $timeout((function() {
      $scope.closeLogin();
    }), 1000);
  };
}).controller('NodesController', function($scope, nodes, NodeService) {
  console.log(nodes);
  $scope.nodes = nodes;
  return $scope.onRefresh = function() {
    var query;
    query = NodeService.getNodes();
    return query.then(function(response) {
      $scope.nodes = response;
      console.log($scope.nodes);
      return $scope.$broadcast('scroll.refreshComplete');
    });
  };
}).controller('SensorController', function($scope, $stateParams, sensor, readings, SensorService) {
  $scope.options = {
    animation: false
  };
  $scope.sensor = sensor;
  $scope.readings = _.map(readings, function(r) {
    return {
      name: r.name,
      labels: _.keys(r.values),
      data: [_.values(r.values)]
    };
  });
  $scope.series = [sensor.measurementName];
  $scope.onClick = function(points, evt) {
    return console.log(points, evt);
  };
  $scope.onRefresh = function() {
    var query;
    query = SensorService.getReadings($stateParams);
    return query.then(function(response) {
      $scope.readings = _.map(readings, function(response) {
        return {
          name: response.name,
          labels: _.keys(response.values),
          data: [_.values(response.values)]
        };
      });
      console.log($scope.readings);
      return $scope.$broadcast('scroll.refreshComplete');
    });
  };
});
