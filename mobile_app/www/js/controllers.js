// Generated by CoffeeScript 1.10.0
angular.module('starter.controllers', []).controller('AppCtrl', function($scope, $ionicModal, $timeout, UserService) {
  console.log(UserService.isCurrentUserAuthenticated());
  $scope.isAuthenticated = UserService.isCurrentUserAuthenticated();
  $scope.doLogout = function() {
    return UserService.logout();
  };
}).controller('LoginController', function($scope, UserService) {
  $scope.user = {};
  $scope.loginError = false;
  return $scope.doLogin = function() {
    var req;
    req = UserService.authenticate($scope.user.username, $scope.user.password);
    return req.then((function(response) {
      return console.log(response);
    }), (function(response) {
      return console.log("not logged");
    }));
  };
}).controller('NodesController', function($scope, nodes, NodeService) {
  console.log(nodes);
  $scope.nodes = nodes;
  $scope.onlyOnlineNodes = true;
  return $scope.onRefresh = function() {
    var query;
    query = NodeService.getNodes();
    return query.then(function(response) {
      $scope.nodes = response;
      console.log($scope.nodes);
      return _.delay((function() {
        $scope.$broadcast('scroll.refreshComplete');
      }), 1000);
    });
  };
}).controller('SensorController', function($scope, $stateParams, sensor, readings, SensorService) {
  $scope.options = {
    animation: false
  };
  $scope.sensor = sensor;
  $scope.readings = _.map(readings, function(r) {
    return {
      name: r.name,
      labels: _.keys(r.values),
      data: [_.values(r.values)]
    };
  });
  $scope.series = [sensor.measurementName];
  $scope.onClick = function(points, evt) {
    return console.log(points, evt);
  };
  $scope.onRefresh = function() {
    var query;
    query = SensorService.getReadings($stateParams);
    return query.then(function(response) {
      $scope.readings = _.map(response, function(r) {
        return {
          name: r.name,
          labels: _.keys(r.values),
          data: [_.values(r.values)]
        };
      });
      console.log($scope.readings);
      return _.delay((function() {
        $scope.$broadcast('scroll.refreshComplete');
      }), 1000);
    });
  };
}).controller('NodeDetailsController', function($scope, node, NodeService) {
  console.log(node);
  $scope.node = node;
  $scope.toggleLight = function() {
    var query;
    console.log("toggle");
    query = NodeService.toggleLight(node.id, node.lightOn);
    return query.then(function(response) {
      return console.log(response);
    });
  };
  return $scope.toggleWater = function() {
    var query;
    console.log("toggle");
    query = NodeService.toggleWater(node.id, node.waterOn);
    return query.then(function(response) {
      return console.log(response);
    });
  };
});
